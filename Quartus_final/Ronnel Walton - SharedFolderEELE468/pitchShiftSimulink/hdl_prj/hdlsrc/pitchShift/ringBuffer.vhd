-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\majorChangeShift\ringBuffer.vhd
-- Created: 2022-05-03 15:07:27
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1.01725e-08
-- Target subsystem base rate: 1.01725e-08
-- Explicit user oversample request: 2048x
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        2.08333e-05
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- wr_dout                       ce_out        2.08333e-05
-- wr_dout1                      ce_out        2.08333e-05
-- Out3                          ce_out        2.08333e-05
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ringBuffer
-- Source Path: majorChangeShift/ringBuffer
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ringBuffer IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        In1                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En23
        ce_out                            :   OUT   std_logic;
        wr_dout                           :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En23
        wr_dout1                          :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En23
        Out3                              :   OUT   std_logic_vector(47 DOWNTO 0)  -- sfix48_En47
        );
END ringBuffer;


ARCHITECTURE rtl OF ringBuffer IS

  ATTRIBUTE multstyle : string;

  -- Component Declarations
  COMPONENT ringBuffer_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb_2048_1_0                    :   OUT   std_logic;
          enb                             :   OUT   std_logic;
          enb_1_1_1                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT modimpl_ntwk
    PORT( X                               :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
          Y                               :   OUT   std_logic_vector(9 DOWNTO 0)  -- ufix10
          );
  END COMPONENT;

  COMPONENT modimpl_ntwk_block1
    PORT( X                               :   IN    std_logic_vector(21 DOWNTO 0);  -- ufix22_En12
          Y                               :   OUT   std_logic_vector(21 DOWNTO 0)  -- ufix22_En12
          );
  END COMPONENT;

  COMPONENT DualPortRAM_generic
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_din                          :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_dout                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          rd_dout                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  COMPONENT modimpl_ntwk_block
    PORT( X                               :   IN    std_logic_vector(16 DOWNTO 0);  -- ufix17_En5
          Y                               :   OUT   std_logic_vector(14 DOWNTO 0)  -- ufix15_En5
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ringBuffer_tc
    USE ENTITY work.ringBuffer_tc(rtl);

  FOR ALL : modimpl_ntwk
    USE ENTITY work.modimpl_ntwk(rtl);

  FOR ALL : modimpl_ntwk_block1
    USE ENTITY work.modimpl_ntwk_block1(rtl);

  FOR ALL : DualPortRAM_generic
    USE ENTITY work.DualPortRAM_generic(rtl);

  FOR ALL : modimpl_ntwk_block
    USE ENTITY work.modimpl_ntwk_block(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_1_1                        : std_logic;
  SIGNAL enb_2048_1_0                     : std_logic;
  SIGNAL tt_ctrl_const_out                : std_logic;
  SIGNAL tt_ctrl_delay_out                : std_logic;
  SIGNAL tt_Initial_Val_out               : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL count_step                       : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tt_out1                          : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL count                            : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tt_out                           : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Modulo_by_Constant_HDL_Optimized_out1 : std_logic_vector(9 DOWNTO 0);  -- ufix10
  SIGNAL Modulo_by_Constant_HDL_Optimized_out1_unsigned : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL plus1_out1                       : unsigned(14 DOWNTO 0);  -- ufix15_En5
  SIGNAL Sum_add_cast                     : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Sum_out1                         : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Data_Type_Conversion_out1        : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Enable_out1                      : std_logic;
  SIGNAL idx1_ctrl_const_out              : std_logic;
  SIGNAL idx1_ctrl_delay_out              : std_logic;
  SIGNAL idx1_Initial_Val_out             : unsigned(21 DOWNTO 0);  -- ufix22_En12
  SIGNAL count_step_1                     : unsigned(21 DOWNTO 0);  -- ufix22_En12
  SIGNAL idx1_out1                        : unsigned(21 DOWNTO 0);  -- ufix22_En12
  SIGNAL count_1                          : unsigned(21 DOWNTO 0);  -- ufix22_En12
  SIGNAL idx1_out                         : unsigned(21 DOWNTO 0);  -- ufix22_En12
  SIGNAL Subtract1_sub_cast               : unsigned(21 DOWNTO 0);  -- ufix22_En12
  SIGNAL Subtract1_out1                   : unsigned(21 DOWNTO 0);  -- ufix22_En12
  SIGNAL Modulo_by_Constant_HDL_Optimized2_out1 : std_logic_vector(21 DOWNTO 0);  -- ufix22
  SIGNAL Modulo_by_Constant_HDL_Optimized2_out1_unsigned : unsigned(21 DOWNTO 0);  -- ufix22_En12
  SIGNAL Sum2_add_cast                    : unsigned(21 DOWNTO 0);  -- ufix22_En12
  SIGNAL Sum2_out1                        : unsigned(21 DOWNTO 0);  -- ufix22_En12
  SIGNAL Data_Type_Conversion2_out1       : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL ringbuffer1_out1                 : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL ringbuffer1_out2                 : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL buffer_size_out1                 : unsigned(15 DOWNTO 0);  -- ufix16_En5
  SIGNAL Bit_Shift_out1                   : unsigned(15 DOWNTO 0);  -- ufix16_En5
  SIGNAL Add_add_cast                     : unsigned(16 DOWNTO 0);  -- ufix17_En5
  SIGNAL Add_add_cast_1                   : unsigned(16 DOWNTO 0);  -- ufix17_En5
  SIGNAL Add_out1                         : unsigned(16 DOWNTO 0);  -- ufix17_En5
  SIGNAL Modulo_by_Constant_HDL_Optimized1_out1 : std_logic_vector(14 DOWNTO 0);  -- ufix15
  SIGNAL Modulo_by_Constant_HDL_Optimized1_out1_unsigned : unsigned(14 DOWNTO 0);  -- ufix15_En5
  SIGNAL Sum1_out1                        : unsigned(14 DOWNTO 0);  -- ufix15_En5
  SIGNAL Data_Type_Conversion1_out1       : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL ringbuffer2_out1                 : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL ringbuffer2_out2                 : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL ringbuffer1_out2_signed          : signed(23 DOWNTO 0);  -- sfix24_En23
  SIGNAL Gain_out1                        : signed(47 DOWNTO 0);  -- sfix48_En47
  SIGNAL ringbuffer2_out2_signed          : signed(23 DOWNTO 0);  -- sfix24_En23
  SIGNAL Add1_add_cast                    : signed(47 DOWNTO 0);  -- sfix48_En47
  SIGNAL Add1_out1                        : signed(47 DOWNTO 0);  -- sfix48_En47

BEGIN
  u_ringBuffer_tc : ringBuffer_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb_2048_1_0 => enb_2048_1_0,
              enb => enb,
              enb_1_1_1 => enb_1_1_1
              );

  u_mod_by_constant : modimpl_ntwk
    PORT MAP( X => std_logic_vector(tt_out1),  -- ufix10
              Y => Modulo_by_Constant_HDL_Optimized_out1  -- ufix10
              );

  u_mod_by_constant_1 : modimpl_ntwk_block1
    PORT MAP( X => std_logic_vector(Subtract1_out1),  -- ufix22_En12
              Y => Modulo_by_Constant_HDL_Optimized2_out1  -- ufix22_En12
              );

  u_ringbuffer1 : DualPortRAM_generic
    GENERIC MAP( AddrWidth => 16,
                 DataWidth => 24
                 )
    PORT MAP( clk => clk,
              enb => enb,
              wr_din => In1,
              wr_addr => std_logic_vector(Data_Type_Conversion_out1),
              wr_en => Enable_out1,
              rd_addr => std_logic_vector(Data_Type_Conversion2_out1),
              wr_dout => ringbuffer1_out1,
              rd_dout => ringbuffer1_out2
              );

  u_mod_by_constant_2 : modimpl_ntwk_block
    PORT MAP( X => std_logic_vector(Add_out1),  -- ufix17_En5
              Y => Modulo_by_Constant_HDL_Optimized1_out1  -- ufix15_En5
              );

  u_ringbuffer2 : DualPortRAM_generic
    GENERIC MAP( AddrWidth => 16,
                 DataWidth => 24
                 )
    PORT MAP( clk => clk,
              enb => enb,
              wr_din => In1,
              wr_addr => std_logic_vector(Data_Type_Conversion1_out1),
              wr_en => Enable_out1,
              rd_addr => std_logic_vector(Data_Type_Conversion2_out1),
              wr_dout => ringbuffer2_out1,
              rd_dout => ringbuffer2_out2
              );

  tt_ctrl_const_out <= '1';

  tt_ctrl_delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      tt_ctrl_delay_out <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        tt_ctrl_delay_out <= tt_ctrl_const_out;
      END IF;
    END IF;
  END PROCESS tt_ctrl_delay_process;


  tt_Initial_Val_out <= to_unsigned(16#001#, 10);

  -- Free running, Unsigned Counter
  --  initial value   = 1
  --  step value      = 1
  count_step <= to_unsigned(16#001#, 10);

  count <= tt_out1 + count_step;

  tt_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      tt_out <= to_unsigned(16#000#, 10);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        tt_out <= count;
      END IF;
    END IF;
  END PROCESS tt_process;


  
  tt_out1 <= tt_Initial_Val_out WHEN tt_ctrl_delay_out = '0' ELSE
      tt_out;

  Modulo_by_Constant_HDL_Optimized_out1_unsigned <= unsigned(Modulo_by_Constant_HDL_Optimized_out1);

  plus1_out1 <= to_unsigned(16#0020#, 15);

  Sum_add_cast <= plus1_out1(14 DOWNTO 5);
  Sum_out1 <= Modulo_by_Constant_HDL_Optimized_out1_unsigned + Sum_add_cast;

  Data_Type_Conversion_out1 <= resize(Sum_out1, 16);

  Enable_out1 <= '1';

  idx1_ctrl_const_out <= '1';

  idx1_ctrl_delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      idx1_ctrl_delay_out <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        idx1_ctrl_delay_out <= idx1_ctrl_const_out;
      END IF;
    END IF;
  END PROCESS idx1_ctrl_delay_process;


  idx1_Initial_Val_out <= to_unsigned(16#000D74#, 22);

  -- Free running, Unsigned Counter
  --  initial value   = 0.84082
  --  step value      = 0.84082
  count_step_1 <= to_unsigned(16#000D74#, 22);

  count_1 <= idx1_out1 + count_step_1;

  idx1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      idx1_out <= to_unsigned(16#000000#, 22);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        idx1_out <= count_1;
      END IF;
    END IF;
  END PROCESS idx1_process;


  
  idx1_out1 <= idx1_Initial_Val_out WHEN idx1_ctrl_delay_out = '0' ELSE
      idx1_out;

  Subtract1_sub_cast <= plus1_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  Subtract1_out1 <= idx1_out1 - Subtract1_sub_cast;

  Modulo_by_Constant_HDL_Optimized2_out1_unsigned <= unsigned(Modulo_by_Constant_HDL_Optimized2_out1);

  Sum2_add_cast <= plus1_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  Sum2_out1 <= Modulo_by_Constant_HDL_Optimized2_out1_unsigned + Sum2_add_cast;

  Data_Type_Conversion2_out1 <= resize(Sum2_out1(21 DOWNTO 12), 16);

  buffer_size_out1 <= to_unsigned(16#8000#, 16);

  Bit_Shift_out1 <= buffer_size_out1 srl 1;

  Add_add_cast <= resize(tt_out1 & '0' & '0' & '0' & '0' & '0', 17);
  Add_add_cast_1 <= resize(Bit_Shift_out1, 17);
  Add_out1 <= Add_add_cast + Add_add_cast_1;

  Modulo_by_Constant_HDL_Optimized1_out1_unsigned <= unsigned(Modulo_by_Constant_HDL_Optimized1_out1);

  Sum1_out1 <= Modulo_by_Constant_HDL_Optimized1_out1_unsigned + plus1_out1;

  Data_Type_Conversion1_out1 <= resize(Sum1_out1(14 DOWNTO 5), 16);

  ringbuffer1_out2_signed <= signed(ringbuffer1_out2);

  Gain_out1 <= resize(ringbuffer1_out2_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 48);

  ringbuffer2_out2_signed <= signed(ringbuffer2_out2);

  Add1_add_cast <= ringbuffer2_out2_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  Add1_out1 <= Gain_out1 + Add1_add_cast;

  Out3 <= std_logic_vector(Add1_out1);

  ce_out <= enb_1_1_1;

  wr_dout <= ringbuffer1_out1;

  wr_dout1 <= ringbuffer2_out1;

END rtl;

